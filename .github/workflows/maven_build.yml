# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Maven build - clean test verify

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        # Other versions of java can be configured as well - https://github.com/actions/setup-java#basic
        java: [14.0.1]
    steps:
      - uses: actions/checkout@v2
      - name: Checkout submodules
        run: git submodule update --init --recursive
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Run linting check - Checkstyle
        run: mvn -e -"Dgpg.skip" checkstyle:check --file pom.xml
      - name: Run static code analysis - PMD
        run: mvn -e -"Dgpg.skip" pmd:check --file pom.xml
      - name: Run unit tests and code coverage check - JUnit and JaCoCo
        run: mvn -e test -"Dcheckstyle.skip" -"Dgpg.skip" --file pom.xml
